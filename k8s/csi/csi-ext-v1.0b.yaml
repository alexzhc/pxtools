---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: px-csi-account
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
   name: px-csi-role
rules:
- apiGroups: ["extensions"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["privileged"]
  verbs: ["use"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["*"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch", "create", "delete", "update"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["volumeattachments"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshots"]
  verbs: ["get", "list"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotcontents"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csinodes"]
  verbs: ["get", "list", "watch", "update"]
- apiGroups: ["csi.storage.k8s.io"]
  resources: ["csidrivers"]
  verbs: ["create", "delete"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: px-csi-role-binding
subjects:
- kind: ServiceAccount
  name: px-csi-account
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: px-csi-role
  apiGroup: rbac.authorization.k8s.io

---

kind: Service
apiVersion: v1
metadata:
  name: px-csi-service
  namespace: kube-system
spec:
  clusterIP: None

---

kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: px-csi-ext
  namespace: kube-system
spec:
  serviceName: "px-csi-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: px-csi-driver
    spec:
      serviceAccount: px-csi-account
      containers:
        - name: csi-external-provisioner
          imagePullPolicy: IfNotPresent
          image: daocloud.io/portworx/csi-provisioner:v1.1.0
          args:
            - "--v=5"
            - "--provisioner=com.openstorage.pxd"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          securityContext:
            privileged: true
###################################
######## Added by DaoCloud ########
          resources:
            # requests:
            #   cpu: '500m'
            #   memory: '500Mi'
            limits:
              cpu: '1'
              memory: '1Gi'
###################################
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          imagePullPolicy: IfNotPresent
          image: daocloud.io/portworx/csi-attacher:v1.1.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          securityContext:
            privileged: true
###################################
######## Added by DaoCloud ########
          resources:
            # requests:
            #   cpu: '500m'
            #   memory: '500Mi'
            limits:
              cpu: '1'
              memory: '1Gi'
###################################
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-cluster-registrar
          imagePullPolicy: IfNotPresent
          image: daocloud.io/portworx/csi-cluster-driver-registrar:v1.0.1
          args:
            - "--v=5"
            - "--csi-address=$(ADDRESS)"
            - "--pod-info-mount-version=v1"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          securityContext:
            privileged: true
###################################
######## Added by DaoCloud ########
          resources:
            # requests:
            #   cpu: '500m'
            #   memory: '500Mi'
            limits:
              cpu: '1'
              memory: '1Gi'
###################################
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/com.openstorage.pxd
            type: DirectoryOrCreate

###################################
######## Added by DaoCloud ########
#      imagePullSecrets:
#        - name: "portworx-regcred"
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - portworx
              topologyKey: "kubernetes.io/hostname"
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: px/csi-ext
#                operator: In
#                values:
#                - "true"
#              - key: node-role.kubernetes.io/master
#                operator: DoesNotExist
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"
##################################